plugins {
    id 'com.marketplace.common'
    alias libs.plugins.jib
    alias libs.plugins.spring.boot
    alias libs.plugins.spring.dependency.management
}

ext {
    set('springCloudVersion', "2022.0.1")
    set('webfluxVersion', '6.0.7')
}

dependencies {
    implementation project(':commons')

    //security
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.0.0'

    //cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-config-client'

    //spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework:spring-webflux:${webfluxVersion}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.security:spring-security-test'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jib {
    from {
        image = 'gcr.io/distroless/java17-debian11'
    }
    to {
        image = "${dockerHubUsername}/${project.name}:${project.version}"
        tags = [version, project.getVersion()] as List<String>
        auth {
            username = dockerHubUsername
            password = dockerHubPassword
        }
    }
    container {
        creationTime = Instant.now().toString()
        format = com.google.cloud.tools.jib.api.buildplan.ImageFormat.OCI
    }
}