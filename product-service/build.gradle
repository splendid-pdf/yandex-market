import com.google.cloud.tools.jib.api.buildplan.ImageFormat

plugins {
    id 'com.marketplace.common'
    alias libs.plugins.jib
    alias libs.plugins.spring.boot
    alias libs.plugins.spring.dependency.management
}

ext {
    set("springCloudConfigVersion", "2022.0.1")
}

dependencies {
    implementation project(':commons')

    // spring
    implementation libs.spring.actuator
    implementation libs.spring.validation
    implementation libs.spring.data.jpa
    implementation libs.spring.web
    implementation libs.spring.security
    implementation libs.spring.oauth2.resource.server
    implementation libs.spring.openapi.webmvc
    implementation libs.flyway

    //spring cloud
    implementation 'org.springframework.cloud:spring-cloud-config-client'

    // db
    runtimeOnly libs.postgresql

    // utils
    developmentOnly libs.spring.devtools

    // monitoring
    runtimeOnly libs.prometheus

    //kafka
    //implementation 'org.springframework.kafka:spring-kafka:3.0.5'

    // tests
    testImplementation libs.spring.test
    testImplementation libs.mockito.inline
    testImplementation libs.h2.database
    testImplementation libs.testcontainers.postgresql

    annotationProcessor libs.spring.config.processor
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudConfigVersion}"
    }
}

jib {
    from {
        image = 'gcr.io/distroless/java17-debian11'
    }
    to {
        image = "${dockerHubUsername}/${project.name}:${project.version}"
        tags = [version, project.getVersion()] as List<String>
        auth {
            username = dockerHubUsername
            password = dockerHubPassword
        }
    }
    container {
        format = ImageFormat.OCI
    }
}

tasks.register("prepareKotlinBuildScriptModel") {}