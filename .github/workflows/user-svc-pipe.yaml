name: user-service ci/cd pipeline

env:
  USERNAME: pipeliner
  USER_EMAIL: pipeliner@mail.ru
  SERVICE_NAME: user-service

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'user-service/**'

jobs:
  build-action:
    if: ${{ github.event.pull_request.merged == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Download repo
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew :${{ env.SERVICE_NAME }}:clean :${{ env.SERVICE_NAME }}:build

      - name: Generate JaCoCo report
        run: ./gradlew :${{ env.SERVICE_NAME }}:jacocoTestReport

      - name: Generate JaCoCo Badges for user-service
        id: jacocoUserService
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: ${{ env.SERVICE_NAME }}/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: jacoco-user-svc.svg
          branches-badge-filename: branches-user-svc.svg
          coverage-label: coverage (user-service)
          branches-label: branches (user-service)

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name '${{ env.USERNAME }}'
            git config --global user.email '${{ env.USER_EMAIL }}'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push
          fi

  deploy:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and publish image
        run: ./gradlew :${{ env.SERVICE_NAME }}:bootBuildImage

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SECRET_HOST }}
          username: ${{ secrets.SECRET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SECRET_PORT }}
          script: ansible-playbook /home/support/ansible/docker/${{ env.SERVICE_NAME }}/replace-container.yaml