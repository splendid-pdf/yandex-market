plugins {
    id 'com.marketplace.common'
    id 'com.marketplace.common.spring'
    alias libs.plugins.spring.boot
    alias libs.plugins.spring.dependency.management
}

dependencies {
    implementation project(':commons')

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.springframework.cloud:spring-cloud-config-client'

    // db
    implementation libs.flyway
    runtimeOnly libs.postgres

    // utils
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation libs.mockito.inline
    testImplementation libs.h2.database
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.1"
    }
}

bootBuildImage {
    def account = rootProject.property('dockerHubUsername')
    imageName = "${account}/${project.name}:${project.version}"
    publish = true
    environment = [
            "BP_JVM_VERSION" : "${compileJava.sourceCompatibility}"
    ]
    docker {
        publishRegistry {
            username = account
            password = rootProject.property('dockerHubPassword')
        }
    }
}