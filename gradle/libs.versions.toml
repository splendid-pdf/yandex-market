[versions]
# plugins-versions
jib = "3.3.1"
spring-boot = "3.0.5"
spring-dependency-management = "1.1.0"

spring-cloud = "2022.0.2"
spring-webflux = "6.0.7"
spring-openapi = "2.0.4"
spring-data-commons = "3.0.4"
spring-error-handling = "4.1.0"
spring-authorization-server = "1.0.0"

# monitoring
prometheus = "1.10.5"

# db-layer
flyway = "9.16.0"
postgres = "42.5.4"

# util-versions
guava = "31.1-jre"
lombok = "1.18.26"
mapstruct = "1.5.3.Final"
h2-database = "2.1.214"
jetbrains-annotations = "24.0.1"
apache-commons-lang3 = "3.12.0"
apache-commons-validator = "1.7"
apache-commons-collections = "3.2.2"
commons-io = "2.11.0"

# test
aspectj-core = "3.24.2"
mockito-inline = "4.10.0"
testcontainers = "1.17.6"
testcontainers-redis = "1.6.4"
testcontainers-mongodb = "1.17.6"
spring-security-test = "6.0.3"
########################################################################################################################

[libraries]
# spring-boot
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-data-commons = {module = "org.springframework.data:spring-data-commons", version.ref = "spring-data-commons" }
spring-error-handling = { module = "io.github.wimdeblauwe:error-handling-spring-boot-starter", version.ref = "spring-error-handling" }
spring-config-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "spring-boot" }

# spring framework
spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "spring-webflux" }
spring-openapi-webmvc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-openapi" }
spring-openapi-webflux = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "spring-openapi" }

# spring cloud
spring-cloud-api-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
spring-cloud-config-client = { module = "org.springframework.cloud:spring-cloud-config-client" }
spring-cloud-circuit-breaker = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }

# spring oauth2
spring-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot" }
spring-oauth2-authorization-server = { module = "org.springframework.security:spring-security-oauth2-authorization-server", version.ref = "spring-authorization-server"}

# other
prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus" }
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }

# db-layer
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }

# util
guava = { module = "com.google.guava:guava", version.ref = "guava" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons-lang3" }
apache-commons-validator = { module = "commons-validator:commons-validator", version.ref = "apache-commons-validator" }
apache-commons-collections = { module = "commons-collections:commons-collections", version.ref = "apache-commons-collections" }

# test
h2-database = { module = "com.h2database:h2", version.ref = "h2-database" }
aspectj-core = { module = "org.assertj:assertj-core", version.ref = "aspectj-core" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-redis = { module = "com.redis.testcontainers:testcontainers-redis", version.ref = "testcontainers-redis" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security-test" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers-mongodb" }
########################################################################################################################

[plugins]
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
