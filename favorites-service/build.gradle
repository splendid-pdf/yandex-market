import com.google.cloud.tools.jib.api.buildplan.ImageFormat

plugins {
    id 'com.marketplace.common'
    alias libs.plugins.jib
    alias libs.plugins.spring.boot
    alias libs.plugins.spring.dependency.management
}

dependencies {
    implementation project(':commons')

    implementation libs.spring.web
    implementation libs.spring.data.jpa
    implementation libs.spring.actuator
    implementation libs.spring.validation
    implementation libs.spring.openapi.webmvc
    annotationProcessor libs.spring.config.processor

    implementation libs.spring.cloud.config.client

    runtimeOnly libs.postgresql

    runtimeOnly libs.prometheus

    testImplementation libs.h2.database
    testImplementation libs.spring.test
    testImplementation libs.aspectj.core
    testImplementation libs.mockito.inline
    testImplementation libs.testcontainers.junit
    testImplementation libs.testcontainers.postgresql
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$libs.versions.spring.cloud"
    }
}

jib {
    from {
        image = 'gcr.io/distroless/java17-debian11'
    }
    to {
        image = "${dockerHubUsername}/${project.name}:${project.version}"
        tags = [version, project.getVersion()] as List<String>
        auth {
            username = dockerHubUsername
            password = dockerHubPassword
        }
    }
    container {
        format = ImageFormat.OCI
    }
}